Entrega System

🚀 Descrição
O Entrega System é um sistema de gerenciamento de entregas, que permite a criação, consulta, listagem e cancelamento de entregas. A arquitetura do projeto segue o padrão Hexagonal Architecture (Ports and Adapters), desacoplando a lógica de negócio das dependências externas.

🎯 Funcionalidades
Criar entrega: Permite criar uma nova entrega.

Buscar entrega por código de rastreio: Busca uma entrega específica usando o código de rastreio.

Listar todas as entregas: Lista todas as entregas cadastradas no sistema.

Cancelar entrega: Cancela uma entrega usando o código de rastreio.

🛠️ Arquitetura
Hexagonal Architecture (Ports and Adapters)
A arquitetura hexagonal desacopla as camadas de lógica de negócio das dependências externas, como bancos de dados e frameworks. O sistema é dividido em:

Portas de entrada (application.port.in): Interfaces que definem os casos de uso do sistema.

Portas de saída (application.port.out): Interfaces para persistência e interações externas.

Adaptadores de entrada (adapter.in.web): Controladores REST que expõem as APIs.

Adaptadores de saída (adapter.out.persistence): Implementação dos repositórios para persistir dados.

🗂️ Estrutura de Pastas
pgsql
Copiar
Editar
src
└── main
    └── java
        └── com
            └── seuusuario
                └── entregasystem
                    ├── adapter
                    │   ├── in
                    │   │   └── web
                    │   │       └── EntregaController.java
                    │   └── out
                    │       └── persistence
                    │           └── EntregaRepositoryAdapter.java
                    ├── application
                    │   ├── port
                    │   │   ├── in
                    │   │   │   └── EntregaServicePort.java
                    │   │   └── out
                    │   │       └── EntregaRepositoryPort.java
                    │   └── service
                    │       └── EntregaService.java
                    ├── domain
                    │   └── Entrega.java
                    ├── dto
                    │   ├── EntregaRequestDTO.java
                    │   └── EntregaResponseDTO.java
                    ├── repository
                    │   └── EntregaRepository.java (Spring Data Interface)
                    └── config
                        └── EntregaConfig.java
📦 Dependências
O projeto utiliza as seguintes dependências:

Spring Boot: Framework para construção de aplicações Java.

Spring Data JPA: Para persistência e abstração de banco de dados.

JUnit: Framework para testes.

Mockito: Para mockar objetos nas camadas de teste.

⚙️ Como Rodar
Requisitos
Java 17+

Maven 3.8+

Spring Boot 2.5+

Passos para rodar localmente
Clone o repositório:

bash
Copiar
Editar
git clone https://github.com/seuusuario/entrega-system.git
cd entrega-system
Compile o projeto:

bash
Copiar
Editar
mvn clean install
Rode a aplicação:

bash
Copiar
Editar
mvn spring-boot:run
Acesse a API na URL: http://localhost:8080.

🧪 Testes
Para rodar os testes, utilize o seguinte comando:

bash
Copiar
Editar
mvn test
Cobertura de Testes
Criar entrega: Testa o fluxo de criação de uma entrega.

Buscar entrega por código de rastreio: Testa a busca de uma entrega específica.

Listar todas as entregas: Testa a listagem de todas as entregas.

Cancelar entrega: Testa o fluxo de cancelamento de uma entrega.

📌 Notas
Este projeto segue o padrão Hexagonal Architecture para garantir um design limpo e desacoplado.

O código foi escrito com foco em testes e segurança, utilizando práticas recomendadas para garantir a qualidade e a manutenção do código.

A API está sendo desenvolvida com Spring Boot e JUnit 5 para testes unitários.

💬 Contribuindo
Se você deseja contribuir com melhorias ou correções de bugs, fique à vontade para abrir uma issue ou enviar um pull request.
